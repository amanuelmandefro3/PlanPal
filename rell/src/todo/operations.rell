operation create_task(title: text, description: text, due_date: timestamp) {
    // Authentication
    val account = auth.authenticate();
    
    // Input Validation
    require(title.size() >= 1, "Title must be at least 1 character");
    require(description.size() >= 1, "Description must be at least 1 character");
    
    // User Resolution
    val user = user @ { account };
    
    // task Creation
    create task (
        title = title,
        description = description,
        due_date = due_date,
        status.PENDING,
        user
    );
}

operation update_status(task_id: integer, status_front: text) {
    val account = auth.authenticate();
    val user = user @ { account };
    val task = task @ { .rowid == rowid(task_id) };
    require(task.user == user, "You are not authorized to edit this task.");
    if (status_front == "COMPLETED") {
        update task @ { .rowid == rowid(task_id) } ( status.COMPLETED);
    } else if (status_front == "PENDING") {
        update task @ { .rowid == rowid(task_id) } ( status.PENDING);
    }
}

operation update_task(task_id: integer, title: text, description: text, due_date: timestamp, status_front: text) {
    val account = auth.authenticate();
    require(title.size() >= 1, "A  title should be at least have 1 letter.");
    require(description.size() >= 1, "A description length should be minimum 1");
    val user = user @ { account };
    val task = task @ { .rowid == rowid(task_id) };
    require(task.user == user, "You are not authorized to edit this task.");
    if (status_front == "COMPLETED") {
        update task @ { .rowid == rowid(task_id) } ( title, description, due_date, status.COMPLETED);
        update task @ { .rowid == rowid(task_id) } ( status.COMPLETED);
    } else if (status_front == "PENDING") {
        update task @ { .rowid == rowid(task_id) } ( title, description, due_date, status.PENDING);
    }
}

operation delete_task(task_id: integer) {
    val account = auth.authenticate();
    val user = user @ { account };
    val task = task @ { .rowid == rowid(task_id) };

    require(task.user == user, "You are not authorized to edit this task.");

    delete task @ { .rowid == rowid(task_id) };
}
